{"version":3,"sources":["commonUtils/Header.js","commonUtils/CommonUtilities.js","commonUtils/APICall.js","components/DirectionsComponent.js","components/Map.js","commonUtils/Constants.js","components/LandingPage.js","App.js","index.js"],"names":["Header","title","className","id","containsKey","keyToFind","objectArray","i","length","key","APICall","baseURI","otherUriParams","headersObj","uriParams","forEach","element","index","value","finalUrl","Object","keys","Promise","resolve","reject","axios","get","headers","then","response","catch","error","console","info","DirectionsComponent","props","state","htmlDirectionsArr","this","directionsInHTMLFormat","push","unixTime","date","Date","hours","getHours","minutes","getMinutes","formattedDate","toISOString","substr","formatTime_unixToHHMM","unixTimeStamp","dangerouslySetInnerHTML","__html","direction","scope","renderDirections","Component","directionsRenderer","directionsService","Map","getDataFromDirectionsAPI","bind","nextProps","nextState","source","destination","process","resp","startLat","data","routes","legs","start_location","lat","startLong","lng","endLat","end_location","endLong","weatherForUniqueCities","steps","setState","htmlDirections","dateTimeObjectToUnix","initMap","stepsArray","uniqueCities","boxDetails","currentTime","itemsProcessed","respFromWeather","city","includes","name","duration","j","list","ele","dt","cityLat","coord","cityLong","lon","conditions","weather","description","temperature","Math","round","main","temp","weatherIcon","icon","setMarkers","window","map","details","h","forecastChoice","google","maps","LatLng","Marker","position","label","color","fontWeight","fontSize","text","size","arrayToReturn","html_instructions","sourceLat","sourceLong","destLat","destLong","pointA","pointB","document","getElementById","myOptions","setMap","DirectionsService","DirectionsRenderer","calculateAndDisplayRoute","route","origin","travelMode","TravelMode","DRIVING","status","setDirections","alert","style","width","height","LandingPage","clientsPosition","usersDestionationLocation","usersOriginLocation","buttonClick","onScriptLoad","options","center","zoom","clientCoordinates","scriptEle","createElement","type","src","x","getElementsByTagName","parentNode","insertBefore","addEventListener","e","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","journeyStartTime","journeyStartDate","selectedIndex","getTime","today","htmlOptionArr","formatedDate","setDate","getDate","placeholder","loadTimeOptions","step","required","onClick","App","exact","path","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7cb9b928.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = ( {title} ) => {\n    return (\n        <div>\n            <h2 className=\"mt-3 text-center\" id = \"headerBar\"> { title } </h2>\n        </div>\n    );\n}\n\nexport default Header;","export function containsKey(keyToFind, objectArray) {\n    for (var i = 0; i < objectArray.length; i++) {\n      if (objectArray[i].key === keyToFind) {\n        return true;\n      }\n    }\n    return false;\n}\n\nexport function formatTime_unixToHHMM(unixTime) {\n  var date = new Date(unixTime * 1000);\n  var hours = date.getHours();\n  var minutes = date.getMinutes();\n\n  var formattedDate = date.toISOString().substr(5,5);\n  return `${formattedDate} ~ ${hours}:${minutes}`;\n}","import axios from \"axios\";\n\nimport {containsKey} from \"./CommonUtilities.js\";\n\n\nfunction APICall ( baseURI = null , otherUriParams = [], headersObj = {} ) {\n\n    if( baseURI !== null && baseURI !== \"\" && ( containsKey( \"key\", otherUriParams ) || containsKey( \"appid\", otherUriParams ))  === false ){\n        console.info( \"BaseURI && apiKey is not valid\");        \n        return;\n    }\n\n    let uriParams = \"\";    \n\n    otherUriParams.forEach( ( element, index ) => {\n        if( index === 0 )\n            uriParams += \"?\" + element.key + \"=\" + element.value;\n        \n        else \n            uriParams += \"&\" + element.key + \"=\" + element.value;                \n    });\n\n    let finalUrl = `${baseURI}${uriParams}`\n\n    // By default content-type would be application/json, if header is not present.\n    if( !headersObj || Object.keys(headersObj).length === 0 ){\n        headersObj = {'Content-Type': 'application/json'};\n    }\n\n    return new Promise( (resolve, reject) => {\n        axios.get( finalUrl, {headers: headersObj })\n        .then( (response) => {         \n            resolve(response); \n        })\n        .catch( (error) =>  {\n            console.error(error);\n            reject(error);         \n        }); \n    });     \n}\n\nexport default APICall;","import React, { Component } from \"react\";\nimport {formatTime_unixToHHMM} from '../commonUtils/CommonUtilities';\n\nclass DirectionsComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  };\n    }\n\n    renderDirections(){\n        let htmlDirectionsArr = [];\n        this.props.directionsInHTMLFormat.forEach( (element) => {\n            htmlDirectionsArr.push(\n                <tr>                \n                    <td>{formatTime_unixToHHMM(element.unixTimeStamp)}</td>\n                    <td dangerouslySetInnerHTML={{ __html: element.direction }} />\n                </tr>\n            );\n        });\n        return htmlDirectionsArr;\n    }\n\n    render() {\n        \n        return (\n            <div>\n                            \n                <table className = \"table table-striped\">                \n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th scope=\"col\">Date(MM-DD) ~ Time</th>\n                            <th scope=\"col\">Direction</th>\n                        </tr>\n                    </thead>\n                    \n                    <tbody>\n                        {this.renderDirections()}\n                    </tbody>                \n                </table>\n            </div>            \n        );\n    }\n}\n\nexport default DirectionsComponent;","import React, { Component } from \"react\";\nimport APICall from \"../commonUtils/APICall\";\nimport * as myConstClass from \"../commonUtils/Constants\";\nimport DirectionsComponent from \"../components/DirectionsComponent\";\n\nvar directionsRenderer = null;\nvar directionsService = null;\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      directionsInHTMLFormat: []\n    }\n    this.getDataFromDirectionsAPI = this.getDataFromDirectionsAPI.bind(this);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return this.state.directionsInHTMLFormat.length !== nextState.directionsInHTMLFormat.length;\n  }\n\n  getDataFromDirectionsAPI() {\n    // We should already have access to window.google obj over here as we're setting in LandingPage.js file.\n    var uriParams = [\n      {\n        key: \"origin\",\n        value: this.props.source,\n      },\n      {\n        key: \"destination\",\n        value: this.props.destination,\n      },\n      {\n        key: \"key\",\n        value: myConstClass.GOOGLE_MAPS_API_KEY,\n      },\n    ];\n    \n    var response = APICall(myConstClass.DIRECTIONS_GOOGLE_MAPS_JSON, uriParams);\n\n    response.then((resp) => {\n      var startLat = resp.data.routes[0].legs[0].start_location.lat;\n      var startLong = resp.data.routes[0].legs[0].start_location.lng;\n      var endLat = resp.data.routes[0].legs[0].end_location.lat;\n      var endLong = resp.data.routes[0].legs[0].end_location.lng;\n\n      this.weatherForUniqueCities( resp.data.routes[0].legs[0].steps );\n\n      this.setState ( { directionsInHTMLFormat: this.htmlDirections(resp.data.routes[0].legs[0].steps, this.props.dateTimeObjectToUnix) });\n      this.initMap(startLat, startLong, endLat, endLong);\n    });\n  }\n\n  weatherForUniqueCities( stepsArray ){\n\n    let uniqueCities = [];\n    let boxDetails = [];\n    var currentTime = this.props.dateTimeObjectToUnix;    \n    var itemsProcessed = 0;\n\n    stepsArray.forEach( (element) => {\n        \n        var uriParams = [\n          {\n            key: \"lat\",\n            value: element.end_location.lat,\n          },\n          {\n            key: \"lon\",\n            value: element.end_location.lng,\n          },\n          {\n            key: \"appid\",\n            value: myConstClass.OPEN_WEATHER_MAP_API_KEY,\n          },\n        ];\n\n        // Keeping this instead of application/json as to get around CORS error. \n        // Application/json will trigger a 'preflight' request, which needs a proxy server in-between for CORS header to be added. Hitting proxy cors-anywhere would result into 429 Status Code (Too Many Requests).\n        // var headersObj = {\n        //   \"Content-Type\": \"application/x-www-form-urlencoded\"\n        // }\n        \n        // var responseFromWeatherAPI  = APICall(myConstClass.OPEN_WEATHER_MAP_API_URI, uriParams, headersObj);\n        var responseFromWeatherAPI  = APICall(myConstClass.OPEN_WEATHER_MAP_API_URI, uriParams, {});\n        responseFromWeatherAPI.then((respFromWeather) => {\n          \n          itemsProcessed++;\n\n          if( !!respFromWeather && !!respFromWeather.data.city && !uniqueCities.includes(respFromWeather.data.city.name) ){\n            // uniqueCities array doesn't contains this location, needs to be shown on the map.. \n            uniqueCities.push(respFromWeather.data.city.name);\n\n            currentTime = currentTime + element.duration.value; // This is from google maps for each leg in seconds \n\n            for ( var j = 0; j < respFromWeather.data.list.length; j++ ){\n              var ele = respFromWeather.data.list[j];\n\n              if( currentTime < ele.dt ){\n                boxDetails.push({\n                  cityLat: respFromWeather.data.city.coord.lat,\n                  cityLong: respFromWeather.data.city.coord.lon,\n                  city: respFromWeather.data.city.name,\n                  conditions: ele.weather[0].description,\n\n                  // 300K × 9/5 - 459.67 = 80.33 °F\n                  temperature: `${Math.round( (ele.main.temp - 273.15) * 9/5 + 32)}°F`,\n\n                  // HACK: https://openweathermap.org/weather-conditions\n                  weatherIcon : `https://openweathermap.org/img/wn/${ele.weather[0].icon}@2x.png` \n                });\n                break;\n              }\n            }             \n\n          }\n\n          // The below loop is to check whether all the aysnc calls from weatherAPI are completed or not. After completion of ALL the weatherAPI calls it will go inside this if loop..\n          if( itemsProcessed === stepsArray.length) {\n            this.setMarkers(window.map, boxDetails);\n          }\n\n        }); // end of Promise\n    }); // end of stepsArray loop\n\n  }\n\n  setMarkers(map, details) {\n    for (var h = 0; h < details.length; h++) {\n        var forecastChoice = new window.google.maps.LatLng(details[h].cityLat, details[h].cityLong);\n        var marker = new window.google.maps.Marker({\n            position: forecastChoice,\n            map: map,\n            icon: details[h].weatherIcon,\n            label: { color: '#00aaff', fontWeight: 'bold', fontSize: '14px', text: details[h].temperature },\n            size: (20, 20),\n        });\n    }\n  }\n\n  htmlDirections( stepsArray, dateTimeObjectToUnix ){\n\n    let arrayToReturn = [];\n    stepsArray.forEach( (element) => {\n      dateTimeObjectToUnix += element.duration.value;\n      arrayToReturn.push({ unixTimeStamp: dateTimeObjectToUnix, direction: element.html_instructions});\n    });\n\n    return arrayToReturn;\n  }\n\n  initMap(sourceLat, sourceLong, destLat, destLong) {\n    var pointA = new window.google.maps.LatLng(sourceLat, sourceLong);\n    var pointB = new window.google.maps.LatLng(destLat, destLong);\n\n    window.map = new window.google.maps.Map(\n      document.getElementById(this.props.id),\n      this.props.myOptions\n    );\n\n    // One needs to nullify directionsRenderer, as it would NOT AUTOMATICALLY clear previous routes from the map.\n    if (directionsRenderer != null) {\n      directionsRenderer.setMap(null);\n      directionsRenderer = null;\n    }\n\n    // Instantiate a directions service.\n    directionsService = new window.google.maps.DirectionsService();\n    directionsRenderer = new window.google.maps.DirectionsRenderer();\n\n    directionsRenderer.setMap(window.map);\n\n    // get route from A to B\n    this.calculateAndDisplayRoute( directionsService, directionsRenderer, pointA, pointB );\n  }\n\n  calculateAndDisplayRoute( directionsService, directionsRenderer, pointA, pointB ) {\n    directionsService.route(\n      {\n        origin: pointA,\n        destination: pointB,\n        travelMode: window.google.maps.TravelMode.DRIVING,\n      },\n      function (response, status) {\n        if (status === \"OK\") {\n          directionsRenderer.setDirections(response);\n        } else {\n          window.alert(\"Directions request failed due to \" + status);\n        }\n      }\n    );\n  }\n\n  render() {\n\n    let { directionsInHTMLFormat } = this.state;\n\n    return (\n      <div>\n        <div style={{ width: \"100%\", height: \"700px\" }} id={this.props.id} >\n          {this.getDataFromDirectionsAPI()}\n        </div>\n        { directionsInHTMLFormat.length > 0 ? <DirectionsComponent directionsInHTMLFormat = {directionsInHTMLFormat} /> : null }\n      </div> \n    );\n  }\n}\n\nexport default Map;\n","// For the deployment and additional security we would be adding secrets to the env. \n// HACK: https://stackoverflow.com/questions/53648652/how-to-use-environment-variables-in-github-page\nexport const GOOGLE_MAPS_API_KEY = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\nexport const OPEN_WEATHER_MAP_API_KEY = process.env.REACT_APP_OPEN_WEATHER_MAP_API_KEY;\n\n// TODO: Add respective API keys to run locally.\n// export const GOOGLE_MAPS_API_KEY = \"AIzaSyBliI96c0HBIH6n-C2OofgxK_CBhyVoC0k\";\n// export const OPEN_WEATHER_MAP_API_KEY = \"3e29e62e2ddf6dd3d2ebd28aed069215\";\n\n// This is to load google maps in the app... \nexport const GOOGLE_MAPS_JS = \"https://maps.googleapis.com/maps/api/js\"\n\n// cors-anywhere is a NodeJS reverse proxy which adds CORS headers to the proxied request. This is to get start and end location coordinates\nexport const DIRECTIONS_GOOGLE_MAPS_JSON = \"https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/directions/json\"\n\nexport const GOOGLE_MAPS_ID = \"googleMap\";\n\nexport const OPEN_WEATHER_MAP_API_URI = \"https://api.openweathermap.org/data/2.5/forecast\";","import React, { Component } from \"react\";\n\nimport Header from \"../commonUtils/Header\";\nimport Map from \"../components/Map\";\nimport * as myConstClass from \"../commonUtils/Constants\";\n\nclass LandingPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clientsPosition: { lat: 37.0902, lng: 95.7129 },  // Setting default to load at the center of USA.\n      usersDestionationLocation: null,\n      usersOriginLocation: null,\n      dateTimeObjectToUnix: null\n    };\n    this.buttonClick  = this.buttonClick.bind(this);\n    this.onScriptLoad = this.onScriptLoad.bind(this);    \n  }\n\n  onScriptLoad() {\n        \n    var options = {\n      center: this.state.clientsPosition,\n      zoom: 8,\n    }\n    // Map should be assigned to a window object, as one can't access the map object directly.. \n    // HACK: https://stackoverflow.com/questions/10253265/get-google-maps-map-instance-from-a-htmlelement    \n    // const map = new window.google.maps.Map( document.getElementById(this.props.id), this.props.options);\n    window.map = new window.google.maps.Map( document.getElementById( myConstClass.GOOGLE_MAPS_ID ), options );\n    // Map is loaded now. It can be accessed via window.google\n  }\n\n  componentDidMount() {\n    this.clientCoordinates();\n\n    if (!window.google) {\n      var scriptEle = document.createElement(\"script\");\n      scriptEle.type = \"text/javascript\";\n      scriptEle.src = `${myConstClass.GOOGLE_MAPS_JS}?key=${myConstClass.GOOGLE_MAPS_API_KEY}`;\n      var x = document.getElementsByTagName(\"script\")[0];\n      x.parentNode.insertBefore(scriptEle, x);\n      //We cannot access google.maps until it'scriptEle finished loading, so adding EventListener.\n      scriptEle.addEventListener(\"load\", (e) => {\n        this.onScriptLoad();\n      });\n    } else {\n      this.onScriptLoad();\n    }\n\n  }\n\n  clientCoordinates() {\n    let clientsPosition = this.state.clientsPosition;\n    \n    if (navigator.geolocation) {\n        // HACK: https://developer.mozilla.org/en-US/docs/Web/API/Geolocation/getCurrentPosition\n        navigator.geolocation.getCurrentPosition((position) => {\n            clientsPosition = {\n                lat: position.coords.latitude,\n                lng: position.coords.longitude,\n            };\n            this.setState({ clientsPosition });\n        });\n    }\n  }\n\n  buttonClick(){\n    let usersOriginLocation = document.getElementById(\"usersOriginLocation\").value;\n    let usersDestionationLocation = document.getElementById(\"usersDestionationLocation\").value;\n    let journeyStartTime = document.getElementById(\"journeyStartTime\").value;\n    let journeyStartDate = document.getElementById('journeyStartDate').options[document.getElementById('journeyStartDate').selectedIndex].text;\n      \n    if( !usersDestionationLocation && !usersOriginLocation && !!journeyStartTime && !!journeyStartDate )\n      return;\n\n    var dateTimeObjectToUnix = new Date(`${journeyStartDate}T${journeyStartTime}`).getTime()/1000;\n\n    // NOTE: SetState is an ASYNC function. \n    this.setState( { usersOriginLocation, usersDestionationLocation, dateTimeObjectToUnix }); \n  }\n\n  loadTimeOptions(){\n    var today = new Date();\n    var htmlOptionArr = [];\n\n    var formatedDate = today.toISOString().substr(0,10);\n    // Will push today's date first.. \n    htmlOptionArr.push(\n      <option value={formatedDate}>{formatedDate}</option>\n    );\n    \n    for ( var i = 1; i < 3; i++ ){\n      today.setDate(today.getDate() + 1);\n      formatedDate = today.toISOString().substr(0,10);\n\n      htmlOptionArr.push(\n        <option value={formatedDate}>{formatedDate}</option>\n      );\n    }\n    return htmlOptionArr;\n  }\n\n  render() {\n    return (\n      <div>\n        <Header title=\"Journey-weather\" />\n        <form className=\"form-inline container justify-content-center\">\n            <input\n                type=\"text\" \n                className=\"form-control col-xl-2 ml-2 mr-2\"  // Using Bootstrap's util for spacing. \n                id=\"usersOriginLocation\" \n                placeholder=\"Origin\"\n            />\n\n            <input \n                type=\"text\" \n                className=\"form-control col-xl-2 ml-2 mr-2\" \n                id=\"usersDestionationLocation\" \n                placeholder=\"Destination\"\n            />\n            <select id=\"journeyStartDate\" className=\"form-control col-xl-2 ml-2 mr-2\">\n\n              {this.loadTimeOptions()}\n            </select>\n            <input id = \"journeyStartTime\" className=\"form-control col-xl-2 ml-2 mr-2\" type=\"time\" step = \"1800\" required/>\n                      \n            <button\n                type=\"button\"\n                className=\"btn btn-success col-xl-1 ml-2 mr-2\"\n                onClick={ this.buttonClick }\n                id=\"search-button\"           \n            >\n                Let's go\n            </button> \n            \n        </form>\n\n        <br/>\n\n        { !!this.state.usersOriginLocation &&\n        !!this.state.usersDestionationLocation && !!this.state.dateTimeObjectToUnix ? (\n          <Map\n            id= {myConstClass.GOOGLE_MAPS_ID}\n            source = {this.state.usersOriginLocation}\n            destination = { this.state.usersDestionationLocation }        \n            dateTimeObjectToUnix = {this.state.dateTimeObjectToUnix }\n          />\n        ) : null}\n       \n      </div>\n    );\n  }\n}\n\nexport default LandingPage;\n","import React from 'react';\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport LandingPage from '../src/components/LandingPage'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Router>\n      <Switch> \n        <Route exact path = \"/\" component = {LandingPage} />\n        <Route path=\"*\" component = {LandingPage} />          \n      </Switch>        \n    </Router>      \n  </div>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}